#+TITLE: SYS-265
#+AUTHOR:

* Installing AD on Server Core
   * In powershell, we can isntall AD quite easily
     #+BEGIN_SRC powershell

     Install-WindowsFeature AD-Domain-Services -IncludeManagementTools

     #+END_SRC
   * This allows to simply install AD onto our server core. Now we can make a forest
     #+BEGIN_SRC powershell

     Install-ADDSForest -DomainName sam.local

     #+END_SRC
   * After reading through the install prompts, the machine will restart and apply the settings
   * Now we can make a new AD user if we wanted to. Though, for the purposes of this lab, we're doing it via mgmt01
     #+BEGIN_SRC powershell

     New-ADUser -SamAccountName sam-adm -AccountPassword(Read-Host -AsSecureString "Input Password") -Enabled $true
     #This will make a new account with account name sam-adm and password as whatever the user enters
     
     #+END_SRC
   * We can now join wks01 to the domain
     * Change the DNS of wks01 to AD01. We're going to install our DNS on AD01, so this is future proofing
     * We can join the machine to the domain with the administrator account. This should be changed
     * Restart
     * Login as administrator@sam.local

   Sources Found:
   https://blog.netwrix.com/2018/06/07/how-to-create-new-active-directory-users-with-powershell/

* Managing AD from a management server
  * After setting up the management server and joining/logging it into
    the domain, we'll install the following tools on it:
    * Remote Server Admin Tools
    * DHCP Server Tools
    * DNS Server Tools
    * File Services Tools
      
    These will allows us to manage our AD01 machine from the management server
  
  * We'll now add ad01 to our list of managed servers
    * We do it as follows:
      * Manage, Add Servers, Search for AD01, Move it over, OK
	* We may need to do this periodically cause it may disappear from our server list
  * Through here, we'll make our users and DNS 
    * We need an A record for fw01 and a Reverse Lookup Zone
      
  Sources Found: 
  https://docs.microsoft.com/en-us/windows-server/administration/server-manager/add-servers-to-server-manager#BKMK_add
* Network Management
  * implies activly managaging resources connected to your network
  * proactive in contrast to reactive
** SNMP
   * Simple Network Management Protocol
   * least common denominator for network management
   * sent across networks that are public and sends text in clear text
   * Three Components
     * managed device
     * SNMP service/agnet
     * Network Management System
   * Managed Information Base (MIB)
     * list of object identifiers (OIDs)
     * SNMP compliant systems map OIDs to system parameters such that
       someone can query the system location oid on any device and get
       data in return
   * SNMP listens on 161/UDP when enabled
   * pfSense supports SNMP
   * Traps:
     * a device will send out an SNMP Trap for a faster/proactive
       response on 162/UDP
** Examples
   * Grafana is an example for this.
     * https://grafana.com/
   * Solarwinds
     * Lol
   * MangeEngine
     * https://www.manageengine.com/network-monitoring/
   * Logstash SNMP input plugin
     * https://www.elastic.co/guide/en/logstash/current/plugins-inputs-snmp.html
** Questions/Research
   * SNMP is an application layer protocol and is the most popular and
     accepted mangement and monitoring elements
* SNMP Install/Setup
** PfSense SNMP
  * Setting up SNMP on pfsense can be done through the browser
  * Log into the admin panel, go to Services -> SNMP
  * We'll need to configure the location, contact, and community string
    * Community string is important because we want it to be unique for us
      so that others can grab onto it.
  * Bind it to LAN
  * Save
  * Restart with the curvy arrow at the top
** Nmon01 Setup
  * We need to setup an SNMP client on nmon 
  * After doing the normal setup and making a DNS entry,
    We'll install ~net-snmp-utils~ on it
  * And we're done for now 
** SNMPD (SNMP Server) and Clients
  * We'll install ~net-snmp-utils~ as well as ~net-snmp~ 
  * configure the ~/etc/snmpd/snmpd.conf~ file to reflect
    the below
    #+BEGIN_SRC conf
      com2sec myNetwork 10.0.5.0/24 SYS265-sam
      group myROGroup v2c myNetwork
      view all included .1 80
      access myROGroup "" any no auth exact all none none
    #+END_SRC
  * enable and restart the service (check status too)
  * Allow the port 161 through the firewall or the service
    * ~firewall-cmd --zone=public --add-service=snmp~
  * web01 should now show up on nmon01 when checking for that
    server with snmpwalk
** Installing SNMP on AD01
  * Through MGMT, we can install the SNMP Feature through the following 
    * Manage->Add Roles and Featues->Features->SNMP Service
    * (Select AD01 in Server Selection)
** Installing SNMP Tools on MGMT01
  * As with AD01, we go to Add Tools-> Features->Remote Server Tools
    -> SMTP Tools
** SNMP Service Security Props on AD01
   * Through computer management -> Services -> Services -> SNMP
     Service props, we'll change the community string and limit
     queries to only nmon01
   * This is done on the security tab
   * Restart the service
   * Query with the following on nmon01 for ad
     #+BEGIN_SRC bash
       snmpwalk -Os -c SYS265-sam -v2c ad01-sam.sam.local system
     #+END_SRC
*** Enabling Remote Management on AD01
  * Going to computer management to enable this will fail to fix, we
    need to start a remote powershell session with the machine.
    #+BEGIN_SRC powershell
      #connect
      Enter-PSSession AD01-sam.sam.local
      # we also need change the firewall rules
      Set-NetFirewallRule -DisplayGroup "Remote Event Log Management" -Enabled True
    #+END_SRC
  * Now we can right click on AD01 and start computer management 
    
* Grafana Install
  * With CentOS, we can download and install with the following commands
    #+BEGIN_SRC bash
    wget https://dl.grafana.com/oss/release/grafana-7.4.0-1.x86_64.rpm
    sudo yum install grafana-7.4.0-1.x86_64.rpm
    sudo yum install initscripts urw-fonts
    #+END_SRC 
  * From here we can enable grafana and start the service 
  * We also need to allow port 3000 through the firewall with the following command
    #+BEGIN_SRC bash
    sudo firewall-cmd --permanent --add-port=3000/tcp
    sudo systemctl restart firewalld
    #+END_SRC 
  * Now we can go to our workstation and access the panel by going to
    nmon on port 3000 and logging in with admin and admin
    * We'll make a new password after this
  * In order to get logs to Grafana, we can use telegraf and influxDB on nmon01
  * https://portal.influxdata.com/downloads/
  * After downloading and installing, we need to get a sql server
    (mariadb) and setup a basic database for grafana to use.
  * 
* DHCP Setup on AD01
  * Open up mgmt01 and got to manage -> Add new Roles/Features
  * Here we just need to install DHCP on AD01
  * After, DHCP should show up on the left. 
  * Now, we can right click on AD01 in the DHCP menu and go to DHCP
    manager.
  * Here, we can right click on AD01 again and add a new scope.
  * After we enter all the information about our scope, we can exit
    the wizard and enable automatic IP retrival on our Window's boxes.
* AWS Notes
  * Setting up a few instances can be done in the EC2 service on AWS.
  * Go to launch instance and select the operating system that we want
    to run
  * Change any settings that you may need in the setup, but most of it
    is just default except for maybe our security group and storage
    size depending on your needs for this instance
  * We'll make our key for our connection. This is a symmetric key, so
    it is our only way in and out. Don't lose it!
  * We can then ssh in (in the case of a linux instance) with the following
    #+BEGIN_SRC bash
    ssh -i "KEY FILE" IPOFINSTANCE
    #+END_SRC
  * In the case of a windows machine, we can do the same with RDP, we
    just need to decrypt the Administrator password so we can ssh
    in. This can be done with the same key that we sshed in with,
    given that we didnt make a seperate one for this instance
  * RDP and SSH will also need to be let through the firewall in an
    inbound rule. This is true for any other services/ports we need to
    access publically.
  * AWS firewall is very strict, nothing is open by default. This can
    be done in our security group
** Reflective Aspect
   I have used EC2 and AWS in the past, so this lab was not that
   complicated for me. What I had the most difficulty with was
   attempting to RDP from my linux machine with Remmina. For whatever
   reason, it simply refused to connect. I had to go onto my Windows
   laptop where I could RDP just fine.
